#!/usr/bin/env bash

set -euo pipefail

BASE=$(readlink -f $(dirname "$0")/..)
ME=$(basename "$0")
TEMP=${BASE}/tmp/${ME%.sh}

PLINK=/shares/hii/sw/plink1.9/20190304/bin/plink
BCFTOOLS="/shares/hii/sw/singularity/latest/bin/singularity exec --bind /shares:/shares --bind /hii/work:/hii/work /shares/hii/images/bioinfo/htslib/latest.simg bcftools"

set_ifs() { oldIFS=${IFS}; IFS=$'\n'; }

unset_ifs() { IFS=${oldIFS}; }

prep_dir() {
  local dir=$1

  echo "> $(basename ${dir})"

  if [[ -d ${dir} ]]; then
    /bin/rm -r ${dir}
  fi
  /bin/mkdir -p ${dir}/{input,output}
}

cmp_file() {
  local file=$1; shift

  # TODO: Hack to cast alleles at end to tab instead of space separation
  if ! diff <(cat ${file} | tr ' ' '\t' | sort) \
            <(set_ifs
              if [[ $# -lt 1 ]]; then
                cat /dev/null
              else
                for line in "$@"; do echo "${line}" | tr ' ' '\t'; done | sort
              fi
              unset_ifs); then
    echo file=$file
    exit 1
  fi
}

cmp_ped() {
  cmp_file ${TEST}/output/test.ped "$@"
}

cmp_map() {
  cmp_file ${TEST}/output/test.map "$@"
}

cmp_chr_update() {
  cmp_file ${TEST}/output/chr_update.txt "$@"
}

cmp_coord_update() {
  cmp_file ${TEST}/output/coord_update.txt "$@"
}

cmp_deleted_snps() {
  cmp_file ${TEST}/output/deleted_snps.txt "$@"
}

cmp_updated_snps() {
  cmp_file ${TEST}/output/updated_snps.txt "$@"
}

cmp_dir() {
  /bin/true
}

rsmerge() {
  set_ifs
  for line in "$@"; do
    echo ${line} | tr ' ' '\t'
  done | gzip -c > ${TEST}/input/rsmerge.txt.gz
  unset_ifs
}

dbsnp() {
  set_ifs
  for line in "$@"; do
    echo ${line} | tr ' ' '\t'
  done | gzip -c > ${TEST}/input/dbsnp.txt.gz
  unset_ifs
}

plink_ped() {
  set_ifs
  for line in "$@"; do
    echo ${line} | tr ' ' '\t'
  done > ${TEST}/input/test.ped
  unset_ifs
}

plink_map() {
  set_ifs
  for line in "$@"; do
    echo ${line} | tr ' ' '\t'
  done > ${TEST}/input/test.map
  unset_ifs
}

plink_bfile() {
  ${PLINK} \
    --ped ${TEST}/input/test.ped \
    --map ${TEST}/input/test.map \
    --make-bed \
    --out ${TEST}/input/test &>/dev/null

    /bin/rm ${TEST}/input/test.{ped,map,log}
}

test_bim() {
  set_ifs
  for line in "$@"; do
    echo ${line} | tr ' ' '\t'
  done > ${TEST}/input/test.bim
  unset_ifs
}

run_snptk_map_using_coord() {
  ${BASE}/bin/snptk map-using-coord \
    --dbsnp=${TEST}/input/dbsnp.txt.gz \
    --output-prefix=${TEST}/output/ \
    "$@" \
    ${TEST}/input/test.bim
}

run_snptk_map_using_rs_id() {
  ${BASE}/bin/snptk map-using-rs-id \
    --dbsnp=${TEST}/input/dbsnp.txt.gz \
    --rs-merge=${TEST}/input/rsmerge.txt.gz \
    --output-prefix=${TEST}/output/ \
    "$@" \
    ${TEST}/input/test.bim
}

run_snptk_snpid_from_coord_update() {
  ${BASE}/bin/snptk snpid-from-coord-update \
    --plink-prefix ${TEST}/input/test \
    --update-file ${TEST}/output/updated_snps.txt \
    --delete-file ${TEST}/output/deleted_snps.txt \
    --output-prefix ${TEST}/output \
    --out-name test
}

bed_to_ped(){
  ${PLINK} \
    --bfile ${TEST}/output/test \
    --recode \
    --tab \
    --out ${TEST}/output/test &>/dev/null
}

#-----------------------------------------------------------------------------------------------------
# snptk-map-using-coord
#-----------------------------------------------------------------------------------------------------
TEST=${TEMP}/snptk-map-using-coord

prep_dir ${TEST}

test_bim \
  "3 rs123 0 3444 A C" \
  "3 rs345 0 8888 A C"

dbsnp \
  "456 3 3444 0" \
  "789 3 8888 0"

run_snptk_map_using_coord

cmp_deleted_snps

cmp_updated_snps \
  "rs123 rs456" \
  "rs345 rs789"

#-----------------------------------------------------------------------------------------------------
# snptk-map-using-rs-id
#-----------------------------------------------------------------------------------------------------
TEST=${TEMP}/snptk-map-using-rs-id

prep_dir ${TEST}

test_bim \
  "3 rs123 0 3444 A C"

dbsnp \
  "123 3 8888 0"

rsmerge \
  "1 2"

run_snptk_map_using_rs_id

cmp_chr_update

cmp_coord_update \
  "rs123 8888"

cmp_deleted_snps

cmp_updated_snps

#-----------------------------------------------------------------------------------------------------
# snpid-from-coord-update
#-----------------------------------------------------------------------------------------------------
# PED file
# - Column 1: Family ID (exclude with `--no-fid`)
# - Column 2: Individual ID
# - Column 3: Paternal ID (exclude with `--no-parents`)
# - Column 4: Maternal ID (exclude with `--no-parents`)
# - Column 5: Sex (1=male; 2=female; other=unknown) (exclude with `--no-sex`)
# - Column 6: Phenotype (exclude with `--no-pheno`) 0 missing, 1 unaffected, 2 affected
# - Column 7 and onwards: Genotypes (can be any character except 0 which is, by default, the missing genotype character.
#
# MAP file
# - Column 1: chromosome (1-22, X, Y or 0 if unplaced)
# - Column 2: rs# or snp identifier
# - Column 3: Genetic distance (morgans)
# - Column 4: Base-pair position (bp units)

# ped + map (non-binary) -> bed, bim, fam (binary)

TEST=${TEMP}/snpid-from-coord-update

prep_dir ${TEST}

plink_ped \
  "fid1 iid1 pid1 mid1 1 1 A C A A" \
  "fid1 iid2 pid1 mid1 2 2 A C A C"

plink_map \
  "3 rs123 0 4444" \
  "3 rs456 0 8888"

plink_bfile # bed, bim, fam

dbsnp \
  "789 3 4444 0"

run_snptk_map_using_coord

cmp_deleted_snps \
  "rs456"

cmp_updated_snps \
  "rs123 rs789"

run_snptk_snpid_from_coord_update &>/dev/null

bed_to_ped

cmp_ped \
  "fid1 iid1 pid1 mid1 1 1 C A" \
  "fid1 iid2 pid1 mid1 2 2 C A"

cmp_map \
  "3 rs789 0 4444"
